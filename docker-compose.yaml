version: '3.9'

services:

  web_nginx:
    container_name: "web"
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "8000:80"
    volumes:
      - ./app/conf.d:/etc/nginx/conf.d
      - ./app/api/static:/fastapi_app/app/api/static  
    networks:
      - custom


  app:
    container_name: "app"
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.example
    depends_on:
      - database
      - database_test
      - redis_app
    networks:
      - custom

  database:
    image: postgres
    restart: always
    container_name: "database"
    env_file:
      - .env.example
    ports:
      - "5451:5432"
    networks:
      - custom

  database_test:
    image: postgres
    restart: always
    container_name: "database_test"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=finance_db_test
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5452:5433"
    networks:
      - custom

  redis_app:
    image: redis
    restart: always
    env_file:
      - .env.example
    container_name: "redis_app"
    ports:
      - "6000:6379"
    networks:
      - custom

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - app
    networks:
      - custom

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
    depends_on:
      - prometheus
    networks:
      - custom

networks:
  custom:
    driver: bridge

volumes:
  grafana-data:
  grafana-config:
  prometheus-data:
